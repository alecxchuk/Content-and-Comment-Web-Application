{"version":3,"sources":["utils/api.js","actions/commentActions.js","actions/postActions.js","actions/modalActions.js","actions/voteActions.js","actions/voteCommentAction.js","components/EditPost.js","actions/newPost.js","components/VoteComment.js","components/MenuItemComment.js","components/OnDeleteConfirmation.js","components/Comments.js","components/VotePost.js","components/NoPostFound.js","icons/emptyIcon.svg","components/PostMenuItem.js","components/Posts.js","components/Home.js","components/React.js","components/ReduxCategory.js","components/Udacity.js","components/App.js","reportWebVitals.js","constants/posts.js","reducers/postReducer.js","constants/modals.js","reducers/modalReducers.js","constants/vote.js","reducers/voteReducer.js","constants/voteComments.js","reducers/voteCommentReducer.js","constants/comments.js","reducers/commentReducer.js","constants/newPost.js","reducers/newPostReducer.js","reducers/index.js","index.js"],"names":["uri","process","API_ADDRESS","headers","Accept","Authorization","API_TOKEN","getPostsByCategory","category","a","axios","get","res","data","getAllPosts","console","log","getPostsByPostId","id","title","body","author","makeid","timestamp","Date","now","post","delete","upVoteToPost","option","downVoteToPost","upVoteToComment","downVoteToComment","length","result","characters","charactersLength","i","charAt","Math","floor","random","put","getAllCommentsByPostId","parentId","upVoteComment","type","downVoteComment","upVote","downVote","upVoted","upVotedState","downVoted","downVotedState","upVotedComment","downVotedComment","BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","useStyles","makeStyles","modalHeader","display","flexDirection","alignItems","justifyContent","close","right","marginRight","h3","marginBottom","h1","margin","h5","positionDiv","top","left","marginLeft","modal","modalTextBox","width","height","outline","modalTitleBox","shadows","elevation","errorMessage","color","rand","round","getModalStyle","transform","EditPost","opens","onClose","clickedPostId","openInputModal","closeInputModal","newPostAdded","newPostAddeds","React","useState","modalStyle","classes","setCategory","setAuthor","setTitle","bodys","setBody","dispatch","useDispatch","getPostWithId","undefined","elems","useEffect","style","className","IconButton","aria-label","onClick","FormControl","NativeSelect","value","onChange","event","target","placeholder","Button","variant","e","obj","push","addPost","postAdded","editPostByPostId","Modal","open","aria-labelledby","aria-describedby","maxWidth","inline","cardRoot","rotate","button","comments","textAlign","textAlignLast","coloredButton","lists","listStyle","center","postion","zIndex","VoteComment","commentary","BsShift","upIcon","setUpIcon","downIcon","setDownIcon","votedState","useSelector","state","voteCommentReducer","func_downVoteComment","setScore","score","BsShiftFill","voteScore","CardActions","startIcon","Divider","orientation","flexItem","float","MenuItemComment","editing","commenter","openAlertBox","anchorEl","setAnchorEl","handleMenuClose","ListItemSecondaryAction","Tooltip","aria-owns","currentTarget","Menu","keepMounted","Boolean","MenuItem","heading","noMargin","cancel","typography","OnDeleteConfirmation","closeAlertBox","element","toDelete","caption","deleteWarning","Typography","submit","bold","fontWeight","commentContainer","noPadding","alignCent","loading","Comments","expanded","commentId","newComment","setNewComment","isAdded","setIsAdded","isReqDone","setIsReq","getComments","setTimeout","then","comment","setComments","comm","setComm","addNewComment","addComment","cancel_editing","setEditingState","openDelAlertBox","setOpenDelAlertBox","delete_comment","deleteComment","ups","setUps","updCom","setUpdCom","handleUpdate","updateComment","editComment","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","ListItem","ListItemAvatar","Avatar","alt","src","FilledInput","multiline","fullWidth","disableUnderline","paddingTop","size","map","ListItemText","secondary","time","toString","lines","more","less","anchorClass","paddingLeft","fontDecoration","edit_comment","chat","VotePost","posters","voteReducer","upVotePost","downVotePost","setExpanded","commentCount","NoPostFound","setOpen","href","PostMenuItem","openEditModal","block","Posts","added","newPostReducer","newPost","categorySelected","postsReducer","modalReducer","modalState","postCat","setPostCat","getElements","x","setPostAdded","deletePosts","deletePost","openInputMods","setOpenInputMods","postings","Card","primary","Voteid","is","Home","ReactCategory","sort","appBar","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","ReduxIcon","props","SvgIcon","xmlns","viewBox","fill","d","UdacityIcon","ReactIcon","cx","cy","r","stroke","strokeWidth","rx","ry","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","main","common","white","App","setValue","handleChange","index","handleOpen","CssBaseline","AppBar","Toolbar","noWrap","Drawer","text","ListItemIcon","dense","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UP_VOTE_COUNT","DOWN_VOTE_COUNT","DELETE_POST","EDIT_POST","COMMENT_COUNTER","GET_POSTS_BY_CATEGORY","GET_ALL_POSTS","intialState","action","MODAL_STATE","UP_VOTED","DOWN_VOTED","GET_ID","UP_VOTED_COMMENT","DOWN_VOTED_COMMENT","GET_ID_COMMENT","ADD_COMMENT","UP_VOTE_COMMENT","DOWN_VOTE_COMMENT","DELETE_COMMENT_BY_PARENT","EDIT_COMMENT","DELETE_COMMENT","commentReducer","NEW_POST_ADDED","combineReducers","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec76833c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst uri = process.env.API_ADDRESS || 'http://localhost:3001'\r\nconst API_TOKEN = process.env.API_TOKEN\r\n\r\nconst headers = {\r\n  Accept: 'application/json',\r\n  Authorization: API_TOKEN,\r\n};\r\n\r\n/* Get all of the posts for a particular category */\r\nexport async function getPostsByCategory(category) {\r\n  const res = await axios.get(`${uri}/${category}/posts`, { headers });\r\n  return res.data;\r\n}\r\n\r\n/* Get all of the posts. Useful for the main page when no category is selected. */\r\nexport async function getAllPosts() {\r\n  try {\r\n  const res = await axios.get(`${uri}/posts`, {headers})\r\n  \r\n  return res.data\r\n\r\n  }\r\n  catch (err) {\r\n    console.log(err)\r\n\r\n  }\r\n}\r\n\r\n/*export const getAllPosts = () =>\r\n  fetch(`${uri}/posts`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.pending)*/\r\n\r\n/* Get the details of a single post */\r\nexport async function getPostsByPostId(id) {\r\n  const res = await axios.get(`${uri}/posts/${id}`, {headers})\r\n  return res.data\r\n}\r\n\r\n/* Add a new post */\r\nexport async function addPost({ category, title, body, author }) {\r\n  const id = makeid(22);\r\n  const timestamp = Date.now();\r\n\r\n  const res = await axios.post( `${uri}/posts`,\r\n    {\r\n      id,\r\n      timestamp,\r\n      title,\r\n      body,\r\n      author,\r\n      category,\r\n    },\r\n    { headers }\r\n  );\r\n  return res.data;\r\n}\r\n\r\n/* Delete Post */\r\n/* Sets the deleted flag for a post to 'true'. */\r\n/* Sets the parentDeleted flag for all child comments to 'true'. */\r\nexport async function deletePost(id) {\r\n  const res = await axios.delete(`${uri}/posts/${id}`, { headers });\r\n\r\n  return res.data;\r\n}\r\n\r\n/* UpVote Post */\r\nexport async function upVoteToPost(id) {\r\n    try {\r\n  const res = await axios.post( `${uri}/posts/${id}`,\r\n    { option: 'upVote', }, { headers }\r\n  );\r\n  return res.data;\r\n}\r\ncatch (err) {\r\n  console.log(err)\r\n\r\n}\r\n}\r\n\r\n/* DownVote Post */\r\nexport async function downVoteToPost(id) {\r\n  const res = await axios.post(`${uri}/posts/${id}`,\r\n    { option: 'downVote', }, { headers }\r\n  );\r\n  return res.data;\r\n}\r\n\r\n/* Used for upVoting on a comment. */\r\nexport async function upVoteToComment(id) {\r\n  const res = await axios.post( `${uri}/comments/${id}`,\r\n    { option: 'upVote', }, { headers }\r\n  );\r\n  return res.data;\r\n}\r\n\r\n/* Used for down voting on a comment.t */\r\nexport async function downVoteToComment(id) {\r\n  const res = await axios.post( `${uri}/comments/${id}`,\r\n    { option: 'downVote',}, { headers }\r\n  );\r\n  return res.data;\r\n}\r\n\r\n/* Generate unique ids */\r\nconst makeid=(length) => {\r\nvar result = '';\r\nvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\nvar charactersLength = characters.length;\r\nfor (var i = 0; i < length; i++) {\r\nresult += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n}\r\nreturn result;\r\n}\r\n\r\n/* Edit the details of an existing post */\r\nexport async function editPostByPostId({ id, title, body }) {\r\n  try {\r\n  const res = await axios.put( `${uri}/posts/${id}`,\r\n    {\r\n      title,\r\n      body,\r\n    },\r\n    { headers }\r\n  );\r\n  return res.data;\r\n    console.log(res)\r\n  } catch (err) {\r\n    console.log(err)\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/* Get all Comments by PostId */\r\n/* Get all the comments for a single post */\r\nexport async function getAllCommentsByPostId(id) {\r\n  const res = await axios.get(`${uri}/posts/${id}/comments`, {\r\n    headers,\r\n  });\r\n\r\n  return res.data;\r\n}\r\n\r\n/* delete Comment*/\r\n/*   Sets a comment's deleted flag to 'true' */\r\nexport async function deleteComment(id) {\r\n  const res = await axios.delete(`${uri}/comments/${id}`, { headers });\r\n\r\n  return res.data;\r\n}\r\n\r\n/* Add a comment to a post */\r\nexport async function addComment({ body, author, parentId }) {\r\nconst id = makeid(22);\r\n  const timestamp = Date.now();\r\n  const res = await axios.post(\r\n    `${uri}/comments`,\r\n    {\r\n      id,\r\n      timestamp,\r\n      body,\r\n      author,\r\n      parentId,\r\n    },\r\n    { headers }\r\n  );\r\n\r\n  return res.data;\r\n}\r\n\r\n/* Edit the details of an existing comment */\r\nexport async function editComment({ id, body }) {\r\n  const timestamp = Date.now();\r\n  const res = await axios.put( `${uri}/comments/${id}`,\r\n    {\r\n      body,\r\n      timestamp,\r\n    },\r\n    { headers }\r\n  );\r\n\r\n  return res.data;\r\n}\r\n","export const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const UP_VOTE_COMMENT = 'UP_VOTE_COMMENT'\r\nexport const DOWN_VOTE_COMMENT = 'DOWN_VOTE_COMMENT'\r\nexport const DELETE_COMMENT_BY_PARENT = 'DELETE_COMMENT_BY_PARENT'\r\nexport const EDIT_COMMENT = 'EDIT_COMMENT'\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\r\n\r\nexport function addComment ({ comment }) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    comment,\r\n  }\r\n}\r\n\r\n/*export function voteComment ({ id, upVote,downVote}) {\r\n  return {\r\n    type: VOTE_COMMENT,\r\n    id,\r\n    upVote,\r\n    downVote,\r\n\r\n  }\r\n}*/\r\nexport function upVoteComment ({ id }) {\r\n  return {\r\n    type: UP_VOTE_COMMENT,\r\n    id,\r\n  }\r\n}\r\nexport function downVoteComment ({ id }) {\r\n  return {\r\n    type: DOWN_VOTE_COMMENT,\r\n    id,\r\n  }\r\n}\r\n\r\nexport function deleteCommentByParent ({ post}) {\r\n  return {\r\n    type: DELETE_COMMENT_BY_PARENT,\r\n    post,\r\n\r\n  }\r\n}\r\n\r\nexport function deleteComment ({ id}) {\r\n  return {\r\n    type: DELETE_COMMENT,\r\n    id,\r\n\r\n\r\n  }\r\n}\r\n\r\nexport function editComment ({ id, comment}) {\r\n  return {\r\n    type: EDIT_COMMENT,\r\n    id,\r\n    comment,\r\n\r\n  }\r\n}\r\n","export const ADD_POST = 'ADD_POST'\r\nexport const UP_VOTE_COUNT = 'UP_VOTE_COUNT'\r\nexport const DOWN_VOTE_COUNT= 'DOWN_VOTE_COUNT'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const EDIT_POST = 'EDIT_POST'\r\nexport const COMMENT_COUNTER = 'COMMENT_COUNTER'\r\nexport const GET_POSTS_BY_CATEGORY = 'GET_POSTS_BY_CATEGORY';\r\nexport const GET_POST_BY_POST_ID = 'GET_POST_BY_POST_ID';\r\nexport const UPVOTE_POST = 'UPVOTE_POST';\r\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\r\n\r\n\r\n\r\nexport const getPosts = post => ({\r\n  type: GET_ALL_POSTS,\r\n  post\r\n});\r\n\r\nexport const getPostByPostId = id => ({\r\n  type: GET_POST_BY_POST_ID,\r\n  id\r\n});\r\n\r\n\r\nexport const getPostsByCategory = category => ({\r\n  type: GET_POSTS_BY_CATEGORY,\r\n  category,\r\n});\r\n\r\nexport function addNewPost ({post}) {\r\n  return {\r\n    type: ADD_POST,\r\n    post\r\n\r\n  }\r\n}\r\n\r\nexport function deletePost ({ id }) {\r\n  return {\r\n    type: DELETE_POST,\r\n    id,\r\n\r\n\r\n  }\r\n}\r\n\r\n/*export function editPostById ({ post }) {\r\n  return {\r\n    type: EDIT_POST,\r\n    post,\r\n\r\n  }\r\n}*/\r\nexport const editPostById = post => ({\r\n  type: EDIT_POST,\r\n  post,\r\n});\r\n\r\nexport function upVote ({ id }) {\r\n  return {\r\n    type: UP_VOTE_COUNT,\r\n    id,\r\n  }\r\n}\r\nexport function downVote ({ id }) {\r\n  return {\r\n    type: DOWN_VOTE_COUNT,\r\n    id,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function commentCounter ({ id, commentCount}) {\r\n  return {\r\n    type: COMMENT_COUNTER,\r\n    id,\r\n    commentCount,\r\n\r\n  }\r\n}\r\n","export const MODAL_STATE = 'MODAL_STATE'\r\n\r\nexport const modalState = (modalState, id) => ({\r\n  type: MODAL_STATE,\r\n  modalState,\r\n  id\r\n});\r\n","export const UP_VOTED = 'UP_VOTED'\r\nexport const DOWN_VOTED = 'DOWN_VOTED'\r\nexport const GET_ID = 'GET_ID'\r\n\r\n\r\nexport const upVoted = (upVotedState) => ({\r\n  type: UP_VOTED,\r\n  upVotedState,\r\n\r\n});\r\n\r\nexport const downVoted = (downVotedState, id) => ({\r\n  type: DOWN_VOTED,\r\n  downVotedState,\r\n  id\r\n});\r\n\r\nexport const getId = (id) => ({\r\n  type: GET_ID,\r\n  id,\r\n\r\n});\r\n","export const UP_VOTED_COMMENT = 'UP_VOTED_COMMENT'\r\nexport const DOWN_VOTED_COMMENT = 'DOWN_VOTED_COMMENT'\r\nexport const GET_ID_COMMENT = 'GET_ID_COMMENT'\r\n\r\n\r\nexport const upVotedComment = (upVotedState) => ({\r\n  type: UP_VOTED_COMMENT,\r\n  upVotedState,\r\n\r\n});\r\n\r\nexport const downVotedComment = (downVotedState, id) => ({\r\n  type: DOWN_VOTED_COMMENT,\r\n  downVotedState,\r\n  id\r\n});\r\n\r\nexport const getIdComment = (id) => ({\r\n  type: GET_ID_COMMENT,\r\n  id,\r\n\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { addNewPost, getPostByPostId,addedPost } from '../actions'\r\nimport { useDispatch } from 'react-redux'\r\nimport { modalState } from '../actions'\r\nimport { getPostsByPostId, editPostByPostId, addPost } from '../utils/api'\r\n\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  modalHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    marginRight:28,\r\n  },\r\n  h3:{\r\n    marginTop: 6,\r\n    marginBottom:4\r\n  },\r\n  h1:{\r\n    padding:0,\r\n    margin:0,\r\n  },\r\n  h5:{\r\n    marginBottom:4\r\n  },\r\n  positionDiv: {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: '-100px',\r\n    marginLeft: '-100px',\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: 'none',\r\n  },\r\n  modalTextBox: {\r\n    width: '100%',\r\n    height: '120px',\r\n    padding: '10px',\r\n    fontSize: '1em',\r\n    border: '1px solid #bdbdbd',\r\n    outline: 'none',\r\n  },\r\n  modalTitleBox:{\r\n    width : '100%',\r\n    height: '35px',\r\n    padding: '10px',\r\n    border: '1px solid #bdbdbd',\r\n    outline: 'none',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: '50%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius:'4px',\r\n    boxShadow: theme.shadows[5],\r\n    elevation:'4',\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  margin: {\r\n   /*margin: theme.spacing(1),*/\r\n   width: '50%'\r\n },\r\n  errorMessage: {\r\n    margin:0,\r\n    padding:0,\r\n    color:'red',\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nexport default function EditPost({\r\n  opens,\r\n  onClose,\r\n  clickedPostId,\r\n  openInputModal,\r\n  closeInputModal,\r\n  newPostAdded,\r\n  newPostAddeds\r\n})  {\r\n\r\n  /* State to store modal state(open or close) and its setter (setOpen)*/\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  /* called if modal is closed */\r\n  const closeModal = () => {\r\n    // dispatch action to set modal state close\r\n    dispatch(modalState({open:false}))\r\n  }\r\n\r\n  /* State to store styling of the modal */\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  const classes = useStyles();\r\n\r\n  // State for select category dropDown inside modal\r\n  const [category, setCategory] = React.useState('React');\r\n\r\n  // handle change for category dropDown\r\n  const changeCategory = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  // State for author  inside modal\r\n  const [author, setAuthor] = React.useState('');\r\n\r\n  // Get the author from input and store in app component state\r\n  const changeAuthor = (event) =>{\r\n    setAuthor(event.target.value)\r\n  }\r\n  // State for title  inside modal\r\n  const [title, setTitle] = React.useState('');\r\n\r\n  // Get the title from input and store in app component state\r\n  const changeTitle = (event) =>{\r\n    setTitle(event.target.value)\r\n\r\n  }\r\n  // State for author inside modal\r\n  const [bodys, setBody] = React.useState('');\r\n  // Get the body from input and store in app component state\r\n  const changeBody = (event) =>{\r\n    setBody(event.target.value)\r\n  }\r\n\r\n  /* Reference to dispatch function */\r\n  const dispatch = useDispatch()\r\n  const reload=()=>window.location.reload();\r\n\r\n\r\n\r\n  /* Called when post button is clicked */\r\n  const savePost = (e) => {\r\n    // check if it is a new post or edit post\r\n    if (!opens) { // editing a post\r\n      const post = {};\r\n      post.id = clickedPostId;\r\n      post.title = title\r\n      post.body = bodys\r\n\r\n      if (title !== '' || body !== '' || author !== '' ) {\r\n        /* Update server with the edited Post object */\r\n        editPostByPostId(post);\r\n\r\n        newPostAdded()\r\n\r\n        // Close Modal\r\n        closeInputModal()\r\n        //reload()\r\n\r\n      } else {\r\n        // Close Modal\r\n        closeInputModal()\r\n      }\r\n    } else { // new post to create\r\n      // new post array\r\n      const post = [];\r\n      // new post object\r\n      const obj = {}\r\n      obj.title = title\r\n      obj.body = bodys\r\n      obj.author = author\r\n      obj.category = category;\r\n      post.push(obj)\r\n\r\n      if (title !== '' || bodys !== '' || author !== '' ) {\r\n        /* Update server with new Post object */\r\n        addPost(obj)\r\n        /* dispatch */\r\n        //dispatch(addNewPost({post}))\r\n        dispatch(addedPost(true));\r\n        // Close Modal\r\n        onClose()\r\n        /* Empty modal fields */\r\n        setAuthor('');\r\n        setTitle('')\r\n        setBody('');\r\n        //reload()\r\n        newPostAddeds()\r\n\r\n      } else {\r\n        // Close Modal\r\n        onClose()\r\n      }\r\n    }\r\n  }\r\n\r\n  const getPostWithId = async () => {\r\n\r\n    // if clickedPostId is not passed then it is a new post being created\r\n    if (clickedPostId !==undefined) {\r\n      // Get post by the id\r\n      const elems = await getPostsByPostId(clickedPostId);\r\n\r\n      // dispatch getPostByPostId action\r\n      dispatch(getPostByPostId({elems}))\r\n\r\n      // insert spinner for data to load\r\n      setTitle(elems.title);\r\n      setAuthor(elems.author);\r\n      setBody(elems.body);\r\n      setCategory(elems.category);\r\n      return elems;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostWithId()\r\n  },[])\r\n\r\n  /* Body of modal */\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div className={classes.modalHeader}>\r\n        <h1 id=\"simple-modal-title\" className={classes.h1}>Edit Post</h1>\r\n        <IconButton aria-label=\"settings\" className={classes.close} onClick={clickedPostId === undefined ? onClose : closeInputModal}>\r\n          <CloseIcon/>\r\n        </IconButton>\r\n      </div>\r\n\r\n      <h4 className={classes.h3}>Category</h4>\r\n      <FormControl className={classes.margin} >\r\n        <NativeSelect\r\n          id=\"demo-customized-select-native\"\r\n          value={category}\r\n          onChange={changeCategory}\r\n          input={<BootstrapInput />}\r\n        >\r\n          <option value={10}>React</option>\r\n          <option value={20}>Redux</option>\r\n          <option value={30}>Udacity</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n\r\n      <h4 className={classes.h5}>Author</h4>\r\n      <input className={classes.modalTitleBox}\r\n        type='text'\r\n        placeholder='e.g John Snow'\r\n        value={author}\r\n        onChange={changeAuthor}\r\n      />\r\n      <h5 className={classes.errorMessage} style ={{display: (author ==='' ? 'block':'none')}}>\r\n        Author cannot be empty\r\n      </h5>\r\n\r\n      <h4 className={classes.h5}>Title</h4>\r\n      <input className={classes.modalTitleBox}\r\n        type='text'\r\n        placeholder='Write Something'\r\n        value={title}\r\n        onChange={changeTitle}\r\n      />\r\n      <h5 className={classes.errorMessage} style ={{display: (title === '' ? 'block':'none')}}>\r\n      Title cannot be empty\r\n      </h5>\r\n\r\n      <h4 className={classes.h5}>Body</h4>\r\n      <textarea\r\n        className={classes.modalTextBox}\r\n        type='text'\r\n        placeholder='Write Something'\r\n        value={bodys}\r\n        onChange={changeBody}\r\n      />\r\n      <h5 className={classes.errorMessage} style ={{display: (bodys ==='' ? 'block':'none')}}>\r\n       Body cannot be empty\r\n      </h5>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={savePost}>\r\n        Post\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return(\r\n    <div className={classes.positionDiv}>\r\n    <Modal\r\n      className={classes.modal}\r\n      open={clickedPostId === undefined ? opens : openInputModal[clickedPostId]}\r\n      onClose={clickedPostId === undefined ? onClose : closeInputModal}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      {body}\r\n    </Modal>\r\n    </div>\r\n  );\r\n}\r\n","export const NEW_POST_ADDED = 'NEW_POST_ADDED'\r\n\r\n\r\nexport const addedPost = (postAdded) => ({\r\n  type: NEW_POST_ADDED,\r\n  postAdded,\r\n\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { BsShift } from \"react-icons/bs\";\r\nimport { BsShiftFill } from \"react-icons/bs\";\r\nimport { BsChat } from \"react-icons/bs\";\r\nimport { getPosts, modalState, upVoteComment, downVoteComment, upVotedComment, downVotedComment, getIdComment } from '../actions'\r\nimport { getAllPosts, upVoteToComment, downVoteToComment } from '../utils/api'\r\nimport Comments from './Comments'\r\n\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  /*root: {\r\n    display: 'flex',\r\n\r\n  },*/\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  cardRoot: {\r\n    marginBottom:'12px',\r\n    marginLeft: '48px',\r\n    width: '70%',\r\n  },\r\n  rotate: {\r\n    transform: 'rotate(180deg)',\r\n\r\n\r\n  },\r\n  button: {\r\n    //margin: theme.spacing(1),\r\n\r\n\r\n    width: '0px',\r\n\r\n  },\r\n  comments: {\r\n    textAlign: 'center',\r\n    textAlignLast: 'right',\r\n  },\r\n  coloredButton: {\r\n    backgroundColor:'black'\r\n  },\r\n  lists:{\r\n    listStyle:'none',\r\n    margin:0\r\n\r\n  },\r\n  center: {\r\n    postion: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    margin: '150px 0 0 400px',\r\n    zIndex: 15,\r\n  }\r\n}));\r\n\r\nexport default function VoteComment({commentary}) {\r\n  /* Reference to dispatch function */\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [upIcon, setUpIcon]= React.useState(BsShift);\r\n  const [downIcon, setDownIcon] = React.useState(BsShift)\r\n  // store\r\n  const votedState = useSelector(state => state.voteCommentReducer)\r\n  \r\n  /* upVote or downVote a comment */\r\n  const func_upVoteComment = (id) => {\r\n    // check if comment has been downVoted\r\n    if (votedState.downVoted === true) {\r\n      // Remove downVote\r\n      upVoteToComment(id);\r\n      // Increase vote score by 1\r\n      setScore(score + 1);\r\n      // dispatch upVoteComment action\r\n      dispatch(upVoteComment({id}))\r\n      // Deselect downvote icon\r\n      setDownIcon(BsShift)\r\n\r\n      // set downVotedState to false\r\n      dispatch(downVotedComment(false,id));\r\n    } else {\r\n      console.log('ns')\r\n      if (votedState.upVoted === false ) {\r\n        console.log('aa')\r\n        // Call Api to upVote the comment\r\n        upVoteToComment(id);\r\n        // dispatch upVote action (increase count by 1)\r\n        dispatch(upVoteComment({id}));\r\n\r\n        // set upVotedState to true\r\n        dispatch(upVotedComment(true,id));\r\n\r\n        // Change icon to Filled icon\r\n        setUpIcon(BsShiftFill);\r\n        setDownIcon(BsShift);\r\n\r\n        // Increase VoteScore by 1\r\n        setScore(score +1)\r\n\r\n      } else {\r\n        console.log('else')\r\n        downVoteToComment(id)\r\n\r\n        // dispatch upVote action\r\n        dispatch(downVoteComment({id}))\r\n        // set upVotedState to false\r\n        dispatch(upVotedComment(false,id));\r\n\r\n        setUpIcon(BsShift);\r\n\r\n        // Decrease vote score by 1 in the ui\r\n        setScore(score - 1)\r\n      }\r\n    }\r\n  }\r\n  const func_downVoteComment = async (id) => {\r\n    // Check if Comment was upVoted\r\n    if (votedState.upVoted === true) {// Comment already upVoted\r\n      // Remove upVote\r\n      downVoteToComment(id);\r\n      // Decrease vote score by 1 in the ui\r\n      setScore(score - 1);\r\n\r\n      // dispatch downVote action\r\n      dispatch(downVoteComment({id}));\r\n      // Deselect the upvote icon\r\n      setUpIcon(BsShift);\r\n\r\n      // set upVotedState to false\r\n      dispatch(upVotedComment(false,id));\r\n    } else { // Comment is not upVoted\r\n\r\n      if (votedState.downVoted === false) {\r\n        downVoteToComment(id);\r\n\r\n        setDownIcon(BsShiftFill)\r\n        setUpIcon(BsShift)\r\n\r\n        // dispatch upVote action\r\n        dispatch(downVoteComment({id}))\r\n\r\n        // set upVotedState to true\r\n        dispatch(downVotedComment(true,id));\r\n\r\n        // Decrease vote score by 1\r\n        setScore(score - 1)\r\n\r\n      } else {\r\n        console.log('else')\r\n        // upVote Comment\r\n        upVoteToComment(id)\r\n\r\n        // dispatch upVote action\r\n        dispatch(upVoteComment({id}))\r\n        // set downVotedState to false\r\n        dispatch(downVotedComment(false,id))\r\n\r\n        setDownIcon(BsShift);\r\n\r\n        // Increase VoteScore by 1\r\n        setScore(score +1);\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  // State for voteScore.\r\n  const [score, setScore] = React.useState(commentary.voteScore);\r\n\r\n\r\n  return (\r\n    <div>\r\n    <CardActions >\r\n      <Button\r\n        className={classes.button}\r\n        color='primary'\r\n        startIcon={upIcon}\r\n        onClick = {() => func_upVoteComment(commentary.id)}\r\n      >\r\n      {score}\r\n      </Button>\r\n\r\n      <Divider orientation=\"vertical\" flexItem/>\r\n      <Button\r\n        className={classes.button}\r\n        startIcon={downIcon} className={classes.rotate}\r\n        onClick={() => func_downVoteComment(commentary.id)}\r\n      >\r\n      </Button>\r\n\r\n    </CardActions>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  float: {\r\n    marginLeft: 'auto',\r\n  },\r\n  }));\r\nexport default function MenuItemComment({editing, commenter,openAlertBox}) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // Open menu when MoreHoriz icon is clicked\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  // Close menu\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // Display message for tooltip\r\n  const longText ='Edit or Delete Comment'\r\n\r\n  return(\r\n    <ListItemSecondaryAction>\r\n      <Tooltip title={longText}>\r\n        <IconButton aria-label=\"settings\"\r\n          aria-owns={anchorEl ? 'simple-menu' : null}\r\n          className={classes.float}\r\n          onClick={handleMenuClick}>\r\n          <MoreHorizIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenuClose}>\r\n          <MenuItem onClick={\r\n            (e) => {\r\n            editing(commenter);\r\n            handleMenuClose();\r\n          }}> Edit Comment\r\n          </MenuItem>\r\n          <MenuItem onClick= {\r\n            () => {\r\n            openAlertBox(commenter.id)\r\n            handleMenuClose()}\r\n          }>\r\n            Delete Comment\r\n          </MenuItem>\r\n      </Menu>\r\n    </ListItemSecondaryAction>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius:'8px',\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline:0\r\n  },\r\n  heading: {\r\n    display: 'flex',\r\n    alignItems:\"center\",\r\n  },\r\n  noMargin: {\r\n    margin:0,\r\n    padding:0\r\n  },\r\n  float:{\r\n    marginLeft:'auto',\r\n    margin:0,\r\n    padding:0,\r\n  },\r\n  cancel: {\r\n    display: 'flex',\r\n    float:'right',\r\n  },\r\n  typography:{\r\n    padding:'16px 0px'\r\n  }\r\n}));\r\n\r\nexport default function OnDeleteConfirmation({openAlertBox,closeAlertBox,element,toDelete, caption}) {\r\n\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  // Delete Message\r\n  const deleteWarning = `Are you sure you want to delete this ${caption}?`\r\n\r\n  // Body of the modal\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div className={classes.heading}>\r\n        <h2 className = {classes.noMargin}>Delete Comment</h2>\r\n        <IconButton aria-label=\"cancel\"\r\n          className={classes.float}\r\n          onClick={closeAlertBox}\r\n        >\r\n          <CancelIcon   fontSize='large' color='action'/>\r\n        </IconButton>\r\n      </div>\r\n      <Typography className={classes.typography}>{deleteWarning}</Typography>\r\n      <div className={classes.cancel}>\r\n        <Button color=\"primary\" onClick={closeAlertBox}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => toDelete(element.id)}>\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n     <Modal\r\n      open={openAlertBox[element.id]}\r\n      onClose={closeAlertBox}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n     >\r\n       {body}\r\n     </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport VoteComment from './VoteComment'\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport clsx from 'clsx';\r\nimport { getAllCommentsByPostId, addComment } from '../utils/api';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport '../App.css'\r\nimport ShowMoreText from 'react-show-more-text';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Menus from './MenuItemComment'\r\nimport { deleteComment, editComment } from '../utils/api'\r\nimport OnDeleteConfirmation from './OnDeleteConfirmation'\r\nimport ReactLoading from 'react-loading';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    width:'25%',\r\n    margin:8\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold',\r\n  },\r\n  commentContainer: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: '92ch',\r\n\r\n  },\r\n  noPadding: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  alignCent: {\r\n    width: '100%',\r\n    alignItems:\"center\",\r\n    padding: '8px 0px',\r\n    margin: 0,\r\n  },\r\n  loading: {\r\n\r\n  margin: '0 auto',\r\n},\r\n}));\r\n\r\nexport default function Comments({expanded, commentId}) {\r\n  const classes = useStyles();\r\n\r\n  /* Reference to dispatch function */\r\n  const dispatch = useDispatch()\r\n\r\n  // State and setter for comment in comment box\r\n  const [newComment, setNewComment] = React.useState('');\r\n\r\n  /* updates state with comment from text box */\r\n  const handleComment =(e) => {\r\n    setNewComment(e.target.value)\r\n  }\r\n  // State to store if new comment has been added or not\r\n  const [isAdded, setIsAdded] = React.useState(false);\r\n\r\n\r\n\r\n  // State to store if request is done\r\n  const [isReqDone, setIsReq] = React.useState(false);\r\n\r\n  console.log(`expanded state is ${expanded}`)\r\n  console.log(`req is ${isAdded}`)\r\n\r\n  // Get all comments from server\r\n  const getComments = async () => {\r\n    // if comment icon is clicked\r\n    if (expanded || (!isReqDone && isAdded)) {\r\n      setTimeout(() => {\r\n        const elems =  getAllCommentsByPostId(commentId);\r\n        elems.then(()=> setIsReq(true));\r\n        elems.then(comment => setComments(comment))\r\n        return elems;\r\n      },1000);\r\n      // Get comments from server and store in state\r\n      //setComments(await getAllCommentsByPostId(commentId));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // getElements method call\r\n    getComments()\r\n  },[isAdded,expanded,!isReqDone])\r\n\r\n\r\n\r\n  // Method to convert unix time to human date\r\n  const convertUnixToDate = (time) => {\r\n    var dates = new Date(time)\r\n    return dates.toString();\r\n  }\r\n\r\n  // Text for tooltip\r\n  const longText = `Click here to Input Name and picture. Default name is Anonymous`;\r\n\r\n  // state to store particular comment being edited and its setter\r\n  const [comm, setComm]= React.useState({})\r\n\r\n  /* Called when add comment button is clicked */\r\n  const addNewComment = (author, parentId) => {\r\n    // New comment object\r\n    const comment = {};\r\n    // add elements and values to comment object\r\n    comment.body = newComment;\r\n    comment.author = author;\r\n    comment.parentId = parentId;\r\n    comment.timestamp = Date.now();\r\n    // if a comment field is not empty\r\n    if (newComment !== '') {\r\n      // Update server with new comment\r\n      addComment(comment);\r\n\r\n      // Update comment state with new comment object.\r\n      //setComments(comments.concat(comment));\r\n\r\n      // Set the comment field to empty\r\n      setNewComment('');\r\n      // state to show new Comment has been added so component will re render\r\n      setIsAdded(true)\r\n      setIsReq(false)\r\n    }\r\n  }\r\n\r\n  // State for storing comments from server\r\n  const [comments, setComments] = React.useState();\r\n\r\n  // Called when edit comment is clicked\r\n  const edit_comment = (comment) => {\r\n\r\n    //setNewComment(comment.body)\r\n    // set editing state to true\r\n    setEditingState(true);\r\n    // store particular comment being edited\r\n    setComm(comment);\r\n  }\r\n\r\n  // Cancel editing a comment\r\n  const cancel_editing = () => {\r\n    // Set the editing state to false\r\n    setEditingState(false);\r\n  }\r\n\r\n  // state for if comment is being edited or not\r\n  const [editing, setEditingState] = React.useState(false);\r\n\r\n  // reload window\r\n  const reload=()=>window.location.reload();\r\n\r\n  // delete confirmation modal open or close state\r\n  const [openDelAlertBox, setOpenDelAlertBox] = React.useState({})\r\n\r\n  /* Open Delete confirm modal method */\r\n  const openAlertBox = (id) => {\r\n    setOpenDelAlertBox({\r\n      [id]: true\r\n    });\r\n  }\r\n  // Close Modal method\r\n  const closeAlertBox = (id) => {\r\n    setOpenDelAlertBox({\r\n      [id]: false\r\n    })\r\n  }\r\n\r\n  /* Method for deleting a comment */\r\n  const delete_comment = (id) => {\r\n\r\n    // Delete comment from server\r\n    deleteComment(id);\r\n    // remove comment using the comment id\r\n    //let arr = comments.filter(comment =>!comment.id.includes(id));\r\n    // update state with new comment array.\r\n    //setComments(arr);\r\n    //reload();\r\n    // Trigger re rerender\r\n    setIsAdded(true)\r\n    setIsReq(false)\r\n    // Close delete confirmation modal after comment has been deleted\r\n    closeAlertBox()\r\n  }\r\n\r\n  // State for if there is a change in the comment being updated\r\n  const [ups, setUps] = React.useState(false);\r\n  // State to store new update text being inputed\r\n  const [updCom, setUpdCom] = React.useState('');\r\n  // Called when text in input changes when updating a comment\r\n  const handleUpdate = (e) => {\r\n    // Text has changed\r\n    setUps(true);\r\n    // Store the new Text being inputed in state\r\n    setUpdCom(e.target.value);\r\n  }\r\n  // Called when update comment button is clicked\r\n  const updateComment = (id) => {\r\n    // new comment object\r\n    const comment = {}\r\n    // add author\r\n    comment.author= 'Anonymous';\r\n    // add id\r\n    comment.id = id;\r\n    // add the body of the comment\r\n    comment.body = updCom;\r\n    // add the time comment was posted\r\n    comment.timestamp = Date.now();\r\n    // Update server with edited comment\r\n    editComment(comment);\r\n    // Set editing state to false since we are done editng a comment\r\n    setEditingState(false);\r\n    // Remove the previous comment from the comment array\r\n    //let arr = comments.filter(comment =>!comment.id.includes(id));\r\n    // Add the updated comment to the comment array.\r\n    //setComments(arr.concat(comment))\r\n\r\n    //Trigger rerender\r\n    setIsReq(false)\r\n    setIsAdded(true)\r\n\r\n  }\r\n\r\n  return (\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <List component=\"div\" className={classes.commentContainer}  disablePadding>\r\n      {console.log(isReqDone)}\r\n      {\r\n        !isReqDone ?\r\n          <div >\r\n            <ReactLoading\r\n            className={classes.loading}\r\n              type={'bubbles'}\r\n              color={'green'}\r\n              height={'10%'}\r\n              width={'10%'}\r\n            />\r\n          </div>\r\n        :\r\n          <div>\r\n            <Divider  component=\"li\" />\r\n            <ListItem button className={classes.alignCent}  alignItems=\"flex-start\" >\r\n              <Tooltip title={longText}>\r\n                <ListItemAvatar className={classes.noPadding}>\r\n                  <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                </ListItemAvatar>\r\n              </Tooltip>\r\n              <FilledInput\r\n                  placeholder=\"Write a comment...\"\r\n                  value={newComment}\r\n                  onChange={handleComment}\r\n                  multiline=\"true\"\r\n                  fullWidth={true}\r\n                  disableUnderline=\"true\"\r\n                  style={{  borderRadius: 25, background:'#e0e0e0' ,paddingTop:8}}\r\n                />\r\n              <Button variant=\"contained\"\r\n                color=\"primary\"\r\n                className = {classes.submit}\r\n                size=\"small\"\r\n                style={{ borderRadius: 25 }}\r\n                onClick={() => addNewComment('Anonymous', commentId)}>\r\n                Add Comment\r\n              </Button>\r\n            </ListItem>\r\n            <Divider component=\"li\" />\r\n            {comments !== undefined && (comments.map((comment) => (\r\n              <ListItem key={comment.id} button alignItems=\"flex-start\" className={classes.noPadding}  >\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                </ListItemAvatar>\r\n                <div>\r\n                  <ListItemText secondary={convertUnixToDate(comment.timestamp)}>\r\n                    <Typography\r\n                      className={classes.bold}\r\n                      component=\"span\"\r\n                      variant=\"subtitle2\"\r\n                      color=\"textPrimary\"\r\n                    >\r\n                    {comment.author}\r\n                    </Typography>\r\n                  </ListItemText>\r\n                  <ListItemText>\r\n                    <div >\r\n                      <ShowMoreText\r\n                        lines={3}\r\n                        more='See More'\r\n                        less='See Less'\r\n\r\n                        className={comm.id === comment.id && editing ? 'none': 'block'}\r\n                        anchorClass=\"anchor-more-text\"\r\n                        expanded={false}\r\n                        width={650}\r\n                      >\r\n                      {comment.body}\r\n                      </ShowMoreText>\r\n                      <div style={{ display: (comm.id === comment.id && editing ? 'block' : 'none')}}>\r\n                        <div style={{display: 'flex'}}>\r\n                          <FilledInput\r\n                            color=\"white\"\r\n                            placeholder=\"Write a comment...\"\r\n                            value= {ups ? updCom : comment.body}\r\n                            onChange= {handleUpdate}\r\n                            multiline=\"true\"\r\n                            fullWidth={true}\r\n                            disableUnderline=\"true\"\r\n                            style={{  width :'100%', borderRadius: 25, background:'#e0e0e0' ,paddingTop:8}}\r\n                          />\r\n                          <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className = {classes.submit}\r\n                            size=\"small\"\r\n                            style={{ borderRadius: 25 }}\r\n                            onClick={() => updateComment(comment.id)}>\r\n                            Update\r\n                          </Button>\r\n                        </div>\r\n                        <span style={{paddingLeft:'8px', fontSize : '12px'}}>Press Esc to<a  style={{ color: 'blue', fontDecoration : 'underline', fontSize : '12px'}} onClick={cancel_editing}> Cancel Editing</a></span>\r\n                      </div>\r\n                    </div>\r\n                    <VoteComment commentary={comment}/>\r\n                  </ListItemText>\r\n                  <Divider  component=\"li\" />\r\n                </div>\r\n                <Menus\r\n                  editing={() => edit_comment(comment)}\r\n                  openAlertBox={() => openAlertBox(comment.id)}\r\n                  commenter={comment}\r\n                />\r\n                <OnDeleteConfirmation\r\n                  openAlertBox={openDelAlertBox}\r\n                  closeAlertBox={() => closeAlertBox(comment.id)}\r\n                  toDelete={() => delete_comment(comment.id)}\r\n                  element={comment}\r\n                  caption='comment'/>\r\n              </ListItem>\r\n            )))}\r\n          </div>\r\n      }\r\n      </List>\r\n    </Collapse>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { BsShift } from \"react-icons/bs\";\r\nimport { BsShiftFill } from \"react-icons/bs\";\r\nimport { BsChat } from \"react-icons/bs\";\r\nimport { upVote, downVote, upVoted, downVoted } from '../actions'\r\nimport { upVoteToPost, downVoteToPost } from '../utils/api'\r\nimport Comments from './Comments'\r\n\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  /*root: {\r\n    display: 'flex',\r\n  },*/\r\n  display: {\r\n    display: 'flex',\r\n    padding: '4px 0px'\r\n  },\r\n\r\n  rotate: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  button: {\r\n    //margin: theme.spacing(1),\r\n    width: '0px',\r\n  },\r\n  chat: {\r\n    marginLeft:'8px'\r\n  }\r\n}));\r\n\r\nexport default function VotePost({posters}) {\r\n  /* Reference to dispatch function */\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  // upIcon state and setter\r\n  const [upIcon, setUpIcon]= React.useState(BsShift);\r\n  // down icob state and setter\r\n  const [downIcon, setDownIcon] = React.useState(BsShift)\r\n  // get upvote and downvote state from redux store.\r\n  const votedState = useSelector(state => state.voteReducer)\r\n\r\n  /* upVote or downVote a post */\r\n  const upVotePost = async (id) => {\r\n    // check if post has been downVoted\r\n    if (votedState.downVoted === true) {\r\n      // Remove downVote\r\n      upVoteToPost(id);\r\n      // Increase vote score by 1\r\n      setScore(score + 1);\r\n      // dispatch upVote action\r\n      dispatch(upVote({id}))\r\n      // Deselect downvote icon\r\n      setDownIcon(BsShift)\r\n\r\n      // set downVotedState to false\r\n      dispatch(downVoted(false,id));\r\n    } else {\r\n      // Check if post has been upVoted before\r\n      if (votedState.upVoted === false ) {\r\n\r\n        // Call Api to upVote the post\r\n        upVoteToPost(id);\r\n        // dispatch upVote action (increase count by 1)\r\n        dispatch(upVote({id}));\r\n\r\n        // set upVotedState to true\r\n        dispatch(upVoted(true,id));\r\n\r\n        // Change icon to Filled icon\r\n        setUpIcon(BsShiftFill);\r\n        setDownIcon(BsShift);\r\n\r\n        // Increase VoteScore by 1\r\n        setScore(score +1)\r\n      } else { // Post has already been upVoted\r\n        // Remove upVote\r\n        downVoteToPost(id)\r\n\r\n        // dispatch downVote action\r\n        dispatch(downVote({id}))\r\n        // set upVotedState to false\r\n        dispatch(upVoted(false,id));\r\n\r\n        // Deselect upvote icon\r\n        setUpIcon(BsShift);\r\n\r\n        // Decrease vote score by 1 in the ui\r\n        setScore(score - 1)\r\n      }\r\n    }\r\n  }\r\n  const downVotePost = async (id) => {\r\n    // Check if Post was upVoted\r\n    if (votedState.upVoted === true) {// Post already upVoted\r\n      // Remove upVote\r\n      downVoteToPost(id);\r\n      // Decrease vote score by 1 in the ui\r\n      setScore(score - 1);\r\n\r\n      // dispatch downVote action\r\n      dispatch(downVote({id}));\r\n      // Deselect the upvote icon\r\n      setUpIcon(BsShift);\r\n\r\n      // set upVotedState to false\r\n      dispatch(upVoted(false,id));\r\n    } else { // Post is not upVoted\r\n    // Check if Post is downvoted\r\n    if (votedState.downVoted === false) { // Post is not downvoted\r\n      // Downvote Post\r\n      downVoteToPost(id);\r\n      // Select downvote icon\r\n      setDownIcon(BsShiftFill);\r\n\r\n      // dispatch downVote action\r\n      dispatch(downVote({id}));\r\n\r\n      // set downVotedState to true\r\n      dispatch(downVoted(true,id));\r\n\r\n      // Decrease vote score by 1\r\n      setScore(score - 1)\r\n\r\n    } else { // Post is already downvoted\r\n\r\n      // Remove upVote\r\n      upVoteToPost(id);\r\n\r\n      // dispatch upVote action\r\n      dispatch(upVote({id}));\r\n      // set downVotedState to false\r\n      dispatch(downVoted(false,id));\r\n\r\n      // Deselect downvote icon\r\n      setDownIcon(BsShift);\r\n\r\n      // Increase VoteScore by 1\r\n      setScore(score +1);\r\n\r\n    }\r\n  }\r\n  console.log(votedState.downVoted)\r\n    console.log(votedState.upVoted)\r\n  }\r\n\r\n  // Set if comment section is expanded or not\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  // Comment Section expanded State\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  // date state and setter.\r\n  const [date, setDate] = React.useState((new Date).toString())\r\n  // Converet unix time to human date.\r\n  const convertUnixToDate = (time) => {\r\n    var dates = new Date(time)\r\n    return dates.toString();\r\n  }\r\n\r\n  // State for voteScore.\r\n  const [score, setScore] = React.useState(posters.voteScore);\r\n\r\n  return (\r\n    <div >\r\n      <div className={classes.display}>\r\n      <Button\r\n        className={classes.button}\r\n        color='primary'\r\n        startIcon={upIcon}\r\n        onClick = {() => upVotePost(posters.id)}\r\n      >\r\n        {score}\r\n      </Button>\r\n\r\n      <Divider orientation=\"vertical\" flexItem/>\r\n      <Button\r\n        className={classes.button}\r\n        startIcon={downIcon} className={classes.rotate}\r\n        onClick={() => downVotePost(posters.id)}\r\n      >\r\n      </Button>\r\n\r\n      <Button\r\n        className={classes.chat}\r\n        startIcon={<BsChat />}\r\n        onClick ={handleExpandClick}\r\n      >\r\n        {posters.commentCount}\r\n      </Button>\r\n      </div>\r\n\r\n    {\r\n      <Comments expanded={expanded}\r\n      commentId = {posters.id}/>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../App.css'\r\nimport NewPost from './EditPost'\r\n\r\n\r\nexport default function NoPostFound() {\r\n  /* State to store modal state(open or close) and its setter (setOpen)*/\r\n  const [open, setOpen] = React.useState(false);\r\n  /* called if new post modal is open */\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  /* called if new Post modal is closed */\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div className='center'>\r\n      <div className='centers'>\r\n        <h2>No posts found</h2>\r\n        <a href='' onClick={handleOpen}> Add a Post </a>\r\n      </div>\r\n      <NewPost\r\n        opens={open}\r\n        onClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/emptyIcon.39afc3c3.svg\";","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  float: {\r\n    marginLeft: 'auto',\r\n  },\r\n  }));\r\nexport default function PostMenuItem({ openEditModal, post,openAlertBox }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  // Open menu when MoreHoriz icon is clicked\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  // Close menu\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // Display message for tooltip\r\n  const longText ='Edit or Delete Post'\r\n\r\n  return(\r\n    <ListItemSecondaryAction>\r\n      <Tooltip title={longText}>\r\n        <IconButton aria-label=\"settings\"\r\n          aria-owns={anchorEl ? 'simple-menu' : null}\r\n          className={classes.float}\r\n          onClick={handleMenuClick}>\r\n          <MoreHorizIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenuClose}>\r\n          <MenuItem onClick={\r\n            () => {\r\n              openEditModal(post.id)\r\n            handleMenuClose();\r\n\r\n          }}> Edit Post\r\n          </MenuItem>\r\n          <MenuItem onClick= {\r\n            () => {\r\n            openAlertBox(post.id)\r\n            handleMenuClose()}\r\n          }>\r\n            Delete Post\r\n          </MenuItem>\r\n      </Menu>\r\n    </ListItemSecondaryAction>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { getAllPosts, getPostsByCategory } from '../utils/api'\r\nimport { getPosts, modalState } from '../actions'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport EditPost from './EditPost'\r\nimport Comments from './Comments'\r\nimport VotePost from './VotePost'\r\nimport { deletePost } from '../utils/api'\r\nimport NoPostFound from './NoPostFound'\r\nimport EmptyIcons from '../icons/emptyIcon.svg';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PostMenu from './PostMenuItem'\r\nimport OnDeleteConfirmation from './OnDeleteConfirmation'\r\nimport ShowMoreText from 'react-show-more-text';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '96ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  block: {\r\n    display: 'block',\r\n    fontWeight: 'bold',\r\n\r\n  },\r\n  loading: {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: '-100px',\r\n      marginLeft: '-100px',\r\n\r\n\r\n  },\r\n}));\r\n\r\n/* EmptyIcon icon */\r\nfunction EmptyIcon(props) {\r\n  return (\r\n    <svg height=\"100pt\" viewBox=\"0 -12 512.00032 512\" width=\"100pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m455.074219 172.613281 53.996093-53.996093c2.226563-2.222657 3.273438-5.367188 2.828126-8.480469-.441407-3.113281-2.328126-5.839844-5.085938-7.355469l-64.914062-35.644531c-4.839844-2.65625-10.917969-.886719-13.578126 3.953125-2.65625 4.84375-.890624 10.921875 3.953126 13.578125l53.234374 29.230469-46.339843 46.335937-166.667969-91.519531 46.335938-46.335938 46.839843 25.722656c4.839844 2.65625 10.921875.890626 13.578125-3.953124 2.660156-4.839844.890625-10.921876-3.953125-13.578126l-53.417969-29.335937c-3.898437-2.140625-8.742187-1.449219-11.882812 1.695313l-54 54-54-54c-3.144531-3.144532-7.988281-3.832032-11.882812-1.695313l-184.929688 101.546875c-2.757812 1.515625-4.644531 4.238281-5.085938 7.355469-.445312 3.113281.601563 6.257812 2.828126 8.480469l53.996093 53.996093-53.996093 53.992188c-2.226563 2.226562-3.273438 5.367187-2.828126 8.484375.441407 3.113281 2.328126 5.839844 5.085938 7.351562l55.882812 30.6875v102.570313c0 3.652343 1.988282 7.011719 5.1875 8.769531l184.929688 101.542969c1.5.824219 3.15625 1.234375 4.8125 1.234375s3.3125-.410156 4.8125-1.234375l184.929688-101.542969c3.199218-1.757812 5.1875-5.117188 5.1875-8.769531v-102.570313l55.882812-30.683594c2.757812-1.515624 4.644531-4.242187 5.085938-7.355468.445312-3.113282-.601563-6.257813-2.828126-8.480469zm-199.074219 90.132813-164.152344-90.136719 164.152344-90.140625 164.152344 90.140625zm-62.832031-240.367188 46.332031 46.335938-166.667969 91.519531-46.335937-46.335937zm-120.328125 162.609375 166.667968 91.519531-46.339843 46.339844-166.671875-91.519531zm358.089844 184.796875-164.929688 90.5625v-102.222656c0-5.523438-4.476562-10-10-10s-10 4.476562-10 10v102.222656l-164.929688-90.5625v-85.671875l109.046876 59.878907c1.511718.828124 3.167968 1.234374 4.808593 1.234374 2.589844 0 5.152344-1.007812 7.074219-2.929687l54-54 54 54c1.921875 1.925781 4.484375 2.929687 7.074219 2.929687 1.640625 0 3.296875-.40625 4.808593-1.234374l109.046876-59.878907zm-112.09375-46.9375-46.339844-46.34375 166.667968-91.515625 46.34375 46.335938zm0 0\"/><path d=\"m404.800781 68.175781c2.628907 0 5.199219-1.070312 7.070313-2.933593 1.859375-1.859376 2.929687-4.4375 2.929687-7.066407 0-2.632812-1.070312-5.210937-2.929687-7.070312-1.859375-1.863281-4.441406-2.929688-7.070313-2.929688-2.640625 0-5.210937 1.066407-7.070312 2.929688-1.871094 1.859375-2.929688 4.4375-2.929688 7.070312 0 2.628907 1.058594 5.207031 2.929688 7.066407 1.859375 1.863281 4.441406 2.933593 7.070312 2.933593zm0 0\"/><path d=\"m256 314.925781c-2.628906 0-5.210938 1.066407-7.070312 2.929688-1.859376 1.867187-2.929688 4.4375-2.929688 7.070312 0 2.636719 1.070312 5.207031 2.929688 7.078125 1.859374 1.859375 4.441406 2.921875 7.070312 2.921875s5.210938-1.0625 7.070312-2.921875c1.859376-1.871094 2.929688-4.441406 2.929688-7.078125 0-2.632812-1.070312-5.203125-2.929688-7.070312-1.859374-1.863281-4.441406-2.929688-7.070312-2.929688zm0 0\"/>\r\n</svg>\r\n  );\r\n}\r\n\r\nexport default function Posts() {\r\n  /* Reference to dispatch function */\r\n  const dispatch = useDispatch()\r\n\r\n  const [freshPost, setFreshPost] = React.useState(false);\r\n\r\n  const added = useSelector(state => state.newPostReducer.newPost);\r\n\r\n\r\n  const foodie = useSelector(state => state.postsReducer);\r\n  const votedState = useSelector(state => state.voteReducer)\r\n  const categorySelected = useSelector(state =>state.postsReducer.category)\r\n  const modea = useSelector(state => state.modalReducer.modalState)\r\n\r\n  const [isReqDone, setIsReq] = React.useState(false);\r\n\r\n  const [postCat, setPostCat] = React.useState([])\r\n  /* Async method to get post from API */\r\n  const getElements = async () => {\r\n    //console.log(categorySelected)\r\n    if (categorySelected===undefined) {\r\n      setTimeout(() => {\r\n        const elems =  getAllPosts();\r\n        elems.then(x=> setIsReq(true))\r\n        elems.then(x=> setPostCat(x))\r\n        return elems;\r\n        //setPostCat(elems);\r\n      },1000);\r\n      //setPostCat(await getAllPosts());\r\n    } else {\r\n      setTimeout(() => {\r\n      const elems = getPostsByCategory(categorySelected);\r\n      elems.then(x=> setIsReq(true))\r\n      elems.then(x=> setPostCat(x))\r\n      return elems;\r\n      //setPostCat(elems);\r\n      },1000)\r\n      //setPostCat(await getPostsByCategory(categorySelected))\r\n    }\r\n };\r\n\r\n  // Set if new Post has been added or not\r\n  const [postAdded, setPostAdded] = React.useState(false);\r\n  // set new post is added\r\n  const newPostAdded =() => {\r\n    setPostAdded(true)\r\n    setIsReq(false)\r\n  }\r\n\r\n useEffect(() => {\r\n   // getElements method call\r\n   getElements()\r\n\r\n },[postAdded,isReqDone, added])\r\n\r\n  const classes = useStyles();\r\n\r\n  // state containing id of clicked posts\r\n  const [clickedPostedId, setClickedPostId] = React.useState('');\r\n\r\n  // Delete post\r\n  const deletePosts = (id) => {\r\n    deletePost(id)\r\n    // refresh window\r\n    setIsReq(false)\r\n  }\r\n\r\n  // Method to convert unix time to human date\r\n  const convertUnixToDate = (time) => {\r\n    var dates = new Date(time)\r\n    return dates.toString();\r\n  }\r\n\r\n  // delete confirmation modal open or close state\r\n  const [openDelAlertBox, setOpenDelAlertBox] = React.useState({})\r\n\r\n  /* Open Delete confirm modal method */\r\n  const openAlertBox = (id) => {\r\n    setOpenDelAlertBox({\r\n      [id]: true\r\n    });\r\n  }\r\n  // Close Delete confirm modal method\r\n  const closeAlertBox = (id) => {\r\n    setOpenDelAlertBox({\r\n      [id]: false\r\n    })\r\n  }\r\n\r\n  // State to store if input modal is open or closed\r\n  const [openInputMods, setOpenInputMods] = React.useState({})\r\n\r\n  /* Called to open Input modal */\r\n  const openInputModal = (id) => {\r\n    setOpenInputMods({\r\n      [id]: true\r\n    });\r\n  }\r\n  // Called to Input Modal method\r\n  const closeInputModal = (id) => {\r\n    setOpenInputMods({\r\n      [id]: false\r\n    })\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          !isReqDone ?\r\n            <div className={classes.loading}>\r\n              <ReactLoading\r\n                type={'spinningBubbles'}\r\n                color={'green'}\r\n                height={'10%'}\r\n                width={'10%'}\r\n              />\r\n            </div>\r\n          :\r\n\r\n        postCat.length !== 0 ?  postCat.map((postings,i) => (\r\n          <List key={i} className={classes.root}>\r\n            <Card className={classes.root}>\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={postings.author}\r\n                  secondary={convertUnixToDate(postings.timestamp)}\r\n                />\r\n                <div>\r\n                  <PostMenu\r\n                    openEditModal={() => openInputModal(postings.id)}\r\n                    openAlertBox={() => openAlertBox(postings.id)}\r\n                    post={postings}\r\n                  />\r\n                  <OnDeleteConfirmation\r\n                    openAlertBox={openDelAlertBox}\r\n                    closeAlertBox={() => closeAlertBox(postings.id)}\r\n                    toDelete={() => deletePosts(postings.id)}\r\n                    element={postings}\r\n                    caption='post'\r\n                    />\r\n                    <EditPost clickedPostId={postings.id}\r\n                    openInputModal={openInputMods}\r\n                    closeInputModal={() => closeInputModal(postings.id)}\r\n                    newPostAdded={newPostAdded}\r\n                    />\r\n                </div>\r\n              </ListItem>\r\n              <ListItem  alignItems=\"flex-start\">\r\n                <div>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"subtitle1\"\r\n                    className={classes.block}\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {postings.title}\r\n                  </Typography>\r\n\r\n                  <ShowMoreText\r\n                    lines={5}\r\n                    more='See More'\r\n                    less='See Less'\r\n                    className={classes.inline}\r\n                    anchorClass=\"anchor-more-text\"\r\n                    expanded={false}\r\n                    width={650}\r\n                  >\r\n                  {postings.body}\r\n                  </ShowMoreText>\r\n                  {/*<Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    className={classes.inline}\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {postings.body}\r\n                  </Typography>*/}\r\n\r\n                  <VotePost posters={postings}\r\n                    Voteid={postings.is}\r\n                  />\r\n                </div>\r\n              </ListItem>\r\n              <Divider  component=\"li\" />\r\n\r\n            </Card>\r\n          </List>\r\n        )) : <NoPostFound/>}\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Posts from './Posts'\r\n\r\nexport default function Home(){\r\n  return (\r\n    <Posts />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Posts from './Posts'\r\n\r\nexport default function ReactCategory() {\r\n  return (\r\n    <Posts/>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Posts from './Posts'\r\n\r\nexport default function ReactCategory(){\r\n  return (\r\n    <Posts/>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Posts from './Posts'\r\n\r\nexport default function ReactCategory(){\r\n  return (\r\n    <Posts/>\r\n  )\r\n}\r\n","import React, { useState,useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport Home from './Home'\nimport ReactCategory from './React'\nimport ReduxCategory from './ReduxCategory'\nimport UdacityCategory from './Udacity'\nimport TuneIcon from '@material-ui/icons/Tune';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport { getPostsByCategory } from '../actions'\nimport { useDispatch} from 'react-redux'\nimport NewPost from './EditPost'\n\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  padding:{\n    padding: 0,\n  },\n  sort: {\n    textAlignLast:'right'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\n/* Redux icon */\nfunction ReduxIcon(props) {\n  return (\n    <SvgIcon {...props} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><g fill=\"#764ABC\"><path d=\"M65.6 65.4c2.9-.3 5.1-2.8 5-5.8-.1-3-2.6-5.4-5.6-5.4h-.2c-3.1.1-5.5 2.7-5.4 5.8.1 1.5.7 2.8 1.6 3.7-3.4 6.7-8.6 11.6-16.4 15.7-5.3 2.8-10.8 3.8-16.3 3.1-4.5-.6-8-2.6-10.2-5.9-3.2-4.9-3.5-10.2-.8-15.5 1.9-3.8 4.9-6.6 6.8-8-.4-1.3-1-3.5-1.3-5.1-14.5 10.5-13 24.7-8.6 31.4 3.3 5 10 8.1 17.4 8.1 2 0 4-.2 6-.7 12.8-2.5 22.5-10.1 28-21.4z\"/><path d=\"M83.2 53c-7.6-8.9-18.8-13.8-31.6-13.8H50c-.9-1.8-2.8-3-4.9-3h-.2c-3.1.1-5.5 2.7-5.4 5.8.1 3 2.6 5.4 5.6 5.4h.2c2.2-.1 4.1-1.5 4.9-3.4H52c7.6 0 14.8 2.2 21.3 6.5 5 3.3 8.6 7.6 10.6 12.8 1.7 4.2 1.6 8.3-.2 11.8-2.8 5.3-7.5 8.2-13.7 8.2-4 0-7.8-1.2-9.8-2.1-1.1 1-3.1 2.6-4.5 3.6 4.3 2 8.7 3.1 12.9 3.1 9.6 0 16.7-5.3 19.4-10.6 2.9-5.8 2.7-15.8-4.8-24.3z\"/><path d=\"M32.4 67.1c.1 3 2.6 5.4 5.6 5.4h.2c3.1-.1 5.5-2.7 5.4-5.8-.1-3-2.6-5.4-5.6-5.4h-.2c-.2 0-.5 0-.7.1-4.1-6.8-5.8-14.2-5.2-22.2.4-6 2.4-11.2 5.9-15.5 2.9-3.7 8.5-5.5 12.3-5.6 10.6-.2 15.1 13 15.4 18.3 1.3.3 3.5 1 5 1.5-1.2-16.2-11.2-24.6-20.8-24.6-9 0-17.3 6.5-20.6 16.1-4.6 12.8-1.6 25.1 4 34.8-.5.7-.8 1.8-.7 2.9z\"/></g></SvgIcon>\n  );\n}\n\n/* Udacity icon */\nfunction UdacityIcon(props) {\n  return (\n    <SvgIcon {...props} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\"><g fill=\"#02b3e4\"><path d=\"M13.3 0L0 7.7v17.6C0 33.4 6.5 40 14.6 40c2.7 0 5.2-.7 7.4-1.9l10.8-6.2C37.1 29.6 40 25.2 40 20V1.6L37.4.1 26 6.2v19.2c0 .8-.1 1.6-.2 2.4-.2.8-.4 1.5-.7 2.2l-.3.6c-.4 0-2.9-.9-4.2-1.8-.6-.4-1.1-.8-1.6-1.3s-.9-1-1.3-1.6c-.4-.6-.7-1.2-1-1.8-.3-.6-.5-1.3-.6-2-.1-.7-.1-1.4-.1-2.1V1.6L13.3 0zm6.5 36.2c-.7.3-1.7.7-2.5.9-.8.2-1.5.2-2.3.2-.8 0-1.6-.1-2.4-.3-.8-.2-1.5-.4-2.2-.7-.7-.3-1.4-.7-2-1.1C6.6 34.1 5.7 33.1 5 32c-.4-.6-.8-1.3-1.1-2-.3-.7-.5-1.5-.7-2.3-.2-.8-.2-1.6-.2-2.4V9.2l10-6.1V20c0 6.4 4.7 11.8 10.7 13.1-.2.3-.4.6-.7.8-1.1 1.1-2 1.8-3.2 2.3zm17-14c-.1.7-.4 1.4-.6 2-.3.6-.6 1.2-1 1.8-.4.6-1.6 2.1-3.2 3-1.6.9-3.1 1.2-4 1.4.6-1.6 1-3.2 1-5V7.7l8-4.6V20c0 .8 0 1.5-.2 2.2z\"/></g></SvgIcon>\n  );\n}\n\n/* React icon */\nfunction ReactIcon(props) {\n  return (\n    <SvgIcon {...props} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-11.5 -10.23174 23 20.46348\">\n  <title>React Logo</title>\n  <circle cx=\"0\" cy=\"0\" r=\"2.05\" fill=\"#61dafb\"/>\n  <g stroke=\"#61dafb\" strokeWidth=\"1\" fill=\"none\">\n    <ellipse rx=\"11\" ry=\"4.2\"/>\n    <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(60)\"/>\n    <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(120)\"/>\n  </g></SvgIcon>\n  );\n}\n\n\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function App(props) {\n\n  /* Reference to dispatch function */\n  const dispatch = useDispatch()\n\n  /* State for index of category option */\n  const [value, setValue] = React.useState(0);\n\n  /* State to store modal state(open or close) and its setter (setOpen)*/\n  const [open, setOpen] = React.useState(false);\n\n  const classes = useStyles();\n\n  /*  set state to index of the clicked category */\n  const handleChange = (index) => {\n    // change state to the value of index\n    setValue(index)\n    // variable to store category\n    var category;\n    // Match the index with Post category\n    switch(index) {\n      case 0:\n      category = undefined;\n      break;\n      case 1:\n      category='react';\n      break;\n      case 2:\n      category='redux';\n      break;\n      case 3:\n      category='udacity';\n      break;\n      default:\n      break;\n    }\n    // Update the redux store with the category clicked\n    dispatch(getPostsByCategory(category));\n  }\n\n  // State for select category dropDown inside modal\n  const [sortMethod, setSortMethod] = React.useState('mimimum');\n\n  // handle change for category dropDown\n  const changeSorting = (event) => {\n    setSortMethod(event.target.value);\n  };\n\n  /* called if new post modal is open */\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  // reload window\n  const reload=()=>window.location.reload();\n\n  /* called if new Post modal is closed */\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // state for sort menu open and close\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // Open sort menu\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  // Close styled menu\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n  const [postAdded,setPostAdded] = React.useState(false);\n  //console.log(postAdded)\n\n  useEffect(() => {\n    setPostAdded(false)\n  },[postAdded])\n\n  const newPostAdded =()=>{\n\n    setPostAdded(true)\n  }\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            Categories\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            {['Home', 'React', 'Redux', 'Udacity'].map((text, index) => (\n              <ListItem button key={text}\n                /* Set state to the index value of the clicked list item*/\n                onClick = {()=>(index===0) ? handleChange(0): (index===1) ? handleChange(1):\n                  (index===2) ? handleChange(2): (index===3) ? handleChange(3) : undefined}>\n                <ListItemIcon>\n                  {index === 0 && <HomeIcon/>}\n                  {index === 1 && <ReactIcon size={24}/>}\n                  {index === 2 && <ReduxIcon size={24}/>}\n                  {index === 3 && <UdacityIcon size={24}/>}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['Add New Post'].map((text, index) => (\n              <ListItem button key={text}\n              onClick={handleOpen}>\n                <ListItemIcon>{index === 0 && <AddBoxIcon size={24} color=\"secondary\"/>}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n      <NewPost\n        opens={open}\n        onClose={handleClose}\n        newPostAddeds={newPostAdded}\n      />\n\n      <main className={classes.content}>\n        <Toolbar />\n        <div className={classes.sort}>\n          <span>Sort By: minimum</span>\n\n          <IconButton aria-label=\"settings\" onClick={handleMenuClick}>\n            <TuneIcon className={classes.padding}/>\n          </IconButton>\n\n        <StyledMenu\n          id=\"customized-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleMenuClose}\n        >\n          <StyledMenuItem  dense={true} >\n            <ListItemIcon  >\n              <RadioButtonCheckedIcon color=\"secondary\" fontSize=\"small\"  />\n            </ListItemIcon>\n            <ListItemText primary=\"minimum\" />\n          </StyledMenuItem>\n          <StyledMenuItem dense={true}>\n            <ListItemIcon>\n\n            </ListItemIcon>\n            <ListItemText primary=\"order by voteScore\" />\n          </StyledMenuItem>\n          <StyledMenuItem dense={true}>\n            <ListItemIcon>\n\n            </ListItemIcon>\n            <ListItemText primary=\"order by timestamp\" />\n          </StyledMenuItem>\n        </StyledMenu>\n        </div>\n        {/* Home Category is clicked */}\n        {value === 0 && (\n          /* Display contents of home component */\n          <Home/>\n        )}\n\n        {/* React Category is clicked */}\n        {value === 1 && (\n          /* Display contents of react component */\n          <ReactCategory/>\n        )}\n\n        {/* Redux Category is clicked */}\n        {value === 2 && (\n          /* Display contents of react component */\n          <ReduxCategory/>\n        )}\n\n        {/* Udacity Category is clicked */}\n        {value === 3 && (\n          /* Display contents of react component */\n          <UdacityCategory/>\n        )}\n      </main>\n    </div>\n  );\n}\n\n//export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const ADD_POST = 'ADD_POST'\r\nexport const UP_VOTE_COUNT = 'UP_VOTE_COUNT'\r\nexport const DOWN_VOTE_COUNT= 'DOWN_VOTE_COUNT'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const EDIT_POST = 'EDIT_POST'\r\nexport const COMMENT_COUNTER = 'COMMENT_COUNTER'\r\nexport const GET_POSTS_BY_CATEGORY = 'GET_POSTS_BY_CATEGORY';\r\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\r\n","import {\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  UP_VOTE_COUNT,\r\n  DOWN_VOTE_COUNT,\r\n  EDIT_POST,\r\n  COMMENT_COUNTER,\r\n  GET_POSTS_BY_CATEGORY,\r\n  GET_ALL_POSTS,\r\n\r\n} from '../constants/posts'\r\n\r\nconst intialState = {\r\n  post:[]\r\n\r\n}\r\n\r\nconst postsReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_POSTS:{\r\n      const { post } = action;\r\n        return {\r\n          post\r\n        }}\r\n\r\n    case ADD_POST :\r\n      const { post } = action;\r\n      const newPost = state.post.push(post);\r\n      //console.log(state.post)\r\n        return {\r\n          ...state,\r\n          /*[post]: {\r\n            ...state[post],*/\r\n            post: newPost,\r\n          //}\r\n        };\r\n        case UP_VOTE_COUNT:\r\n    \t\t\treturn {\r\n    \t\t\t\t...state,\r\n    \t\t\t\tpost: state.post.map((post) => {\r\n    \t\t\t\t\tif( action.id === post.id ) {\r\n    \t\t\t\t\t\treturn {...post, voteScore: ++post.voteScore}\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\treturn post\r\n    \t\t\t\t})\r\n\t\t\t}\r\n        case DOWN_VOTE_COUNT:\r\n        return {\r\n          ...state,\r\n          post: state.post.map((post) => {\r\n            if( action.id === post.id ) {\r\n              return {...post, voteScore: --post.voteScore}\r\n            }\r\n\r\n            return post\r\n          })\r\n        }\r\n\r\n    case GET_POSTS_BY_CATEGORY:\r\n      const { category } = action;\r\n       return {\r\n         ...state,\r\n         category: category\r\n       };\r\n\r\n\r\n    /*case DELETE_POST:{\r\n      const { id, category } = action.post;\r\n      const newPost = state[post.category].filter(post => post.id !== id);\r\n        return {\r\n          ...state,\r\n          [post.category]: newPost\r\n        };\r\n      };*/\r\n    case EDIT_POST:\r\n    case COMMENT_COUNTER:\r\n\r\n    /*case ADD_POST:\r\n      const { post } = action;\r\n      const newPost = state[post.category].push(post);\r\n        return {\r\n          ...state,\r\n          [post.category]: newPost\r\n        }*/\r\n\r\n\r\n      case DELETE_POST :{\r\n        const { id } = action;\r\n        return {\r\n          ...state,\r\n            [post.id]:null,\r\n        };\r\n}\r\n    default:\r\n    return state;\r\n  }\r\n}\r\nexport default postsReducer;\r\n","export const MODAL_STATE = 'MODAL_STATE'\r\n","import {\r\n  MODAL_STATE,\r\n} from '../constants/modals'\r\n\r\nconst intialState = {\r\n  modalState: {\r\n  open: false,\r\n  id:null\r\n}\r\n}\r\n\r\nconst modalReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case MODAL_STATE:\r\n    const { modalState, id } = action;\r\n      return {\r\n        modalState,\r\n        id\r\n      }\r\n\r\n    default:\r\n    return state;\r\n  }\r\n}\r\nexport default modalReducer;\r\n","export const UP_VOTED = 'UP_VOTED'\r\nexport const DOWN_VOTED = 'DOWN_VOTED'\r\nexport const GET_ID = 'GET_ID'\r\n","import {\r\n  UP_VOTED,\r\n  DOWN_VOTED,\r\n  GET_ID,\r\n} from '../constants/vote'\r\n\r\nconst intialState = {\r\n    upVoted: false,\r\n    id: null,\r\n    downVoted: false,\r\n\r\n\r\n}\r\n\r\nconst voteReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case UP_VOTED: {\r\n      const { upVotedState, id } = action;\r\n        return {\r\n          ...state,\r\n          upVoted:upVotedState,\r\n          //downVoted:false,\r\n          id: id\r\n\r\n        }\r\n    }\r\n\r\n    case DOWN_VOTED:{\r\n      const { downVotedState, id } = action;\r\n        return {\r\n          ...state,\r\n          downVoted:downVotedState,\r\n          //upVote:false,\r\n          id: id\r\n\r\n        }\r\n      }\r\n    case GET_ID:\r\n      const { id } = action;\r\n        return {\r\n          ...state,\r\n          id:id.id\r\n\r\n        }\r\n\r\n    default:\r\n    return state;\r\n  }\r\n}\r\nexport default voteReducer;\r\n","export const UP_VOTED_COMMENT = 'UP_VOTED_COMMENT'\r\nexport const DOWN_VOTED_COMMENT = 'DOWN_VOTED_COMMENT'\r\nexport const GET_ID_COMMENT = 'GET_ID_COMMENT'\r\n","import {\r\n  UP_VOTED_COMMENT,\r\n  DOWN_VOTED_COMMENT,\r\n  GET_ID_COMMENT,\r\n} from '../constants/voteComments'\r\n\r\nconst intialState = {\r\n    upVoted: false,\r\n    id: null,\r\n    downVoted: false,\r\n}\r\n\r\nconst voteCommentReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case UP_VOTED_COMMENT: {\r\n      const { upVotedState, id } = action;\r\n        return {\r\n          ...state,\r\n          upVoted:upVotedState,\r\n          //downVoted:false,\r\n          id: id\r\n\r\n        }\r\n    }\r\n\r\n    case DOWN_VOTED_COMMENT:{\r\n      const { downVotedState, id } = action;\r\n        return {\r\n          ...state,\r\n          downVoted:downVotedState,\r\n          //upVote:false,\r\n          id: id\r\n\r\n        }\r\n      }\r\n    case GET_ID_COMMENT:\r\n      const { id } = action;\r\n        return {\r\n          ...state,\r\n          id:id.id\r\n\r\n        }\r\n\r\n    default:\r\n    return state;\r\n  }\r\n}\r\nexport default voteCommentReducer;\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const UP_VOTE_COMMENT = 'UP_VOTE_COMMENT';\r\nexport const DOWN_VOTE_COMMENT= 'DOWN_VOTE_COMMENT';\r\nexport const DELETE_COMMENT_BY_PARENT = 'DELETE_COMMENT_BY_PARENT';\r\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\n","import {\r\n  ADD_COMMENT,\r\n  UP_VOTE_COMMENT,\r\n  DOWN_VOTE_COMMENT,\r\n  DELETE_COMMENT_BY_PARENT,\r\n  EDIT_COMMENT,\r\n  DELETE_COMMENT,\r\n} from '../constants/comments'\r\n\r\nconst intialState = {\r\n  comment:[]\r\n\r\n}\r\n\r\nconst commentReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ADD_COMMENT :\r\n      const { comment } = action;\r\n      const newComment = state.comment.push(comment);\r\n      //console.log(state.post)\r\n        return {\r\n          ...state,\r\n          /*[post]: {\r\n            ...state[post],*/\r\n            comment: newComment,\r\n          //}\r\n        };\r\n        case UP_VOTE_COMMENT:\r\n    \t\t\treturn {\r\n    \t\t\t\t...state,\r\n    \t\t\t\tcomment: state.comment.map((comment) => {\r\n    \t\t\t\t\tif( action.id === comment.id ) {\r\n    \t\t\t\t\t\treturn {...comment, voteScore: ++comment.voteScore}\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\treturn comment;\r\n    \t\t\t\t})\r\n\t\t\t}\r\n        case DOWN_VOTE_COMMENT:\r\n        return {\r\n          ...state,\r\n          comment: state.comment.map((comment) => {\r\n            if( action.id === comment.id ) {\r\n              return {...comment, voteScore: --comment.voteScore}\r\n            }\r\n            return comment\r\n          })\r\n        }\r\n\r\n\r\n    case DELETE_COMMENT_BY_PARENT:\r\n    case EDIT_COMMENT:\r\n      case DELETE_COMMENT :\r\n    default:\r\n    return state;\r\n  }\r\n}\r\nexport default commentReducer;\r\n","export const NEW_POST_ADDED = 'NEW_POST_ADDED'\r\n","import {\r\n  NEW_POST_ADDED\r\n} from '../constants/newPost'\r\n\r\nconst intialState = {\r\n    newPost: false,\r\n}\r\n\r\nconst newPostReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case NEW_POST_ADDED:\r\n      const { postAdded } = action;\r\n        return {\r\n          ...state,\r\n          newPost:postAdded,\r\n          }\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n    export default newPostReducer;\r\n","import {\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  UP_VOTE_COUNT,\r\n  DOWN_VOTE_COUNT,\r\n  EDIT_POST,\r\n  COMMENT_COUNTER,\r\n} from '../actions'\r\nimport {\r\n  ADD_COMMENT,\r\n  DELETE_COMMENT,\r\n  VOTE_COMMENT,\r\n  EDIT_COMMENT,\r\n  DELETE_COMMENT_BY_PARENT\r\n} from '../actions/commentActions'\r\nimport { combineReducers } from 'redux';\r\nimport postsReducer from './postReducer';\r\nimport modalReducer from './modalReducers';\r\nimport voteReducer from './voteReducer';\r\nimport voteCommentReducer from './voteCommentReducer';\r\nimport commentReducer from './commentReducer';\r\nimport newPostReducer from './newPostReducer';\r\n\r\nconst initialPost = {\r\n    id: null,\r\n    timestamp: null,\r\n    title: null,\r\n    body: null,\r\n    author: null,\r\n    category: null,\r\n    voteScore: null,\r\n    deleted: null,\r\n    commentCount: null\r\n  }\r\n\r\n\r\n\r\n\r\nexport default combineReducers ({\r\n  postsReducer,\r\n  modalReducer,\r\n  voteReducer,\r\n  voteCommentReducer,\r\n  commentReducer,\r\n  newPostReducer,\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore} from 'redux';\nimport reducer from './reducers';\nimport { Provider } from 'react-redux';\n\n/* Invoke createStore and pass in reducer */\nconst store = createStore (reducer,\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}